trigger:
- develop
- master
- release/*
- hotfix/*

pr:
- develop
- release/*
- hotfix/*

jobs:
# Build
- job: Build
  pool:
    vmImage: 'windows-2022'
  steps:
  - powershell: ./build.ps1
    displayName: 'Build'
  - publish: $(Build.SourcesDirectory)/BuildArtifacts/Packages/NuGet
    artifact: NuGet Package
    displayName: 'Publish NuGet package as build artifact'
# Integration Tests Frosting Windows (.NET 5)
- job: Test_Frosting_Windows_Net5
  displayName: Integration Tests Frosting Windows (.NET 5)
  dependsOn: Build
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install NodeJs 14.x'
  - powershell: choco install markdownlint-cli --no-progress
    displayName: 'Install required tools'
  - download: current
    artifact: NuGet Package
    displayName: 'Download build artifact'
  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Pipeline.Workspace)/NuGet Package
      targetFolder: $(Build.SourcesDirectory)/BuildArtifacts/Packages/NuGet
    displayName: 'Copy build artifact for test run'
  - powershell: ./build.ps1 --verbosity=diagnostic
    workingDirectory: ./tests/frosting/net5.0
    displayName: 'Run integration tests'
  - publish: $(Build.SourcesDirectory)/tests/frosting/net5.0/build/BuildArtifacts/output
    artifact: Integration Tests Frosting Windows (.NET 5)
    displayName: 'Publish generated reports as build artifact'
# Integration Tests Script Runner Windows (.NET Core tool)
- job: Test_Script_Runner_Windows_DotNetCoreTool
  displayName: Integration Tests Script Runner Windows (.NET Core tool)
  dependsOn: Build
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install NodeJs 14.x'
  - powershell: choco install markdownlint-cli --no-progress
    displayName: 'Install required tools'
  - download: current
    artifact: NuGet Package
    displayName: 'Download build artifact'
  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Pipeline.Workspace)/NuGet Package
      targetFolder: $(Build.SourcesDirectory)/BuildArtifacts/Packages/NuGet
    displayName: 'Copy build artifact for test run'
  - powershell: ./build.ps1 --verbosity=diagnostic
    workingDirectory: ./tests/script-runner/
    displayName: 'Run integration tests'
  - publish: $(Build.SourcesDirectory)/tests/script-runner/BuildArtifacts/output
    artifact: Integration Tests Script Runner Windows (.NET Core tool)
    displayName: 'Publish generated reports as build artifact'
# Integration Tests Frosting macOS 10.15 (.NET 5)
- job: Test_Frosting_macOS_Net5
  displayName: Integration Tests Frosting macOS 10.15 (.NET 5)
  dependsOn: Build
  pool:
    vmImage: 'macOS-10.15'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install NodeJs 14.x'
  - bash: |
      npm install -g markdownlint-cli
    displayName: 'Install required tools'
  - download: current
    artifact: NuGet Package
    displayName: 'Download build artifact'
  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Pipeline.Workspace)/NuGet Package
      targetFolder: $(Build.SourcesDirectory)/BuildArtifacts/Packages/NuGet
    displayName: 'Copy build artifact for test run'
  - bash: |
      ./build.sh --verbosity=diagnostic
    workingDirectory: ./tests/frosting/net5.0
    displayName: 'Run integration tests'
  - publish: $(Build.SourcesDirectory)/tests/frosting/net5.0/build/BuildArtifacts/output
    artifact: Integration Tests Frosting macOS 10.15 (.NET 5)
    displayName: 'Publish generated reports as build artifact'
# Integration Tests Script Runner macOS 10.15 (.NET Core tool)
- job: Test_Script_Runner_macOS_DotNetCoreTool
  displayName: Integration Tests Script Runner macOS 10.15 (.NET Core tool)
  dependsOn: Build
  pool:
    vmImage: 'macOS-10.15'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install NodeJs 14.x'
  - bash: |
      npm install -g markdownlint-cli
    displayName: 'Install required tools'
  - download: current
    artifact: NuGet Package
    displayName: 'Download build artifact'
  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Pipeline.Workspace)/NuGet Package
      targetFolder: $(Build.SourcesDirectory)/BuildArtifacts/Packages/NuGet
    displayName: 'Copy build artifact for test run'
  - bash: |
      ./build.sh --verbosity=diagnostic
    workingDirectory: ./tests/script-runner/
    displayName: 'Run integration tests'
  - publish: $(Build.SourcesDirectory)/tests/script-runner/BuildArtifacts/output
    artifact: Integration Tests Script Runner macOS 10.15 (.NET Core tool)
    displayName: 'Publish generated reports as build artifact'
# Integration Tests Frosting Ubuntu 18.04 (.NET 5)
- job: Test_Frosting_ubuntu_Net5
  displayName: Integration Tests Frosting Ubuntu 18.04 (.NET 5)
  dependsOn: Build
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install NodeJs 14.x'
  - bash: |
      npm install -g markdownlint-cli
    displayName: 'Install required tools'
  - download: current
    artifact: NuGet Package
    displayName: 'Download build artifact'
  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Pipeline.Workspace)/NuGet Package
      targetFolder: $(Build.SourcesDirectory)/BuildArtifacts/Packages/NuGet
    displayName: 'Copy build artifact for test run'
  - bash: |
      ./build.sh --verbosity=diagnostic
    workingDirectory: ./tests/frosting/net5.0
    displayName: 'Run integration tests'
  - publish: $(Build.SourcesDirectory)/tests/frosting/net5.0/build/BuildArtifacts/output
    artifact: Integration Tests Frosting Ubuntu 18.04 (.NET 5)
    displayName: 'Publish generated reports as build artifact'
# Integration Tests Script Runner Ubuntu 18.04 (.NET Core tool)
- job: Test_Script_Runner_ubuntu_DotNetCoreTool
  displayName: Integration Tests Script Runner Ubuntu 18.04 (.NET Core tool)
  dependsOn: Build
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install NodeJs 14.x'
  - bash: |
      npm install -g markdownlint-cli
    displayName: 'Install required tools'
  - download: current
    artifact: NuGet Package
    displayName: 'Download build artifact'
  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Pipeline.Workspace)/NuGet Package
      targetFolder: $(Build.SourcesDirectory)/BuildArtifacts/Packages/NuGet
    displayName: 'Copy build artifact for test run'
  - bash: |
      ./build.sh --verbosity=diagnostic
    workingDirectory: ./tests/script-runner/
    displayName: 'Run integration tests'
  - publish: $(Build.SourcesDirectory)/tests/script-runner/BuildArtifacts/output
    artifact: Integration Tests Script Runner Ubuntu 18.04 (.NET Core tool)
    displayName: 'Publish generated reports as build artifact'
